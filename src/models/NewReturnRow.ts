/* tslint:disable */
/* eslint-disable */
/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Contains all information needed for a new return row when creating a new return.
 * @export
 * @interface NewReturnRow
 */
export interface NewReturnRow {
    /**
     * The order row that this return row represents.
     * Required.
     * @type {number}
     * @memberof NewReturnRow
     */
    orderRowId?: number;
    /**
     * The return code for this return row. The return code is used to tag the return row with a reason.
     * Required.
     * @type {number}
     * @memberof NewReturnRow
     */
    returnCode?: number;
    /**
     * The return action for this return row. The return action decides what type of refund should be created.
     * Required.
     * 1 = Investigate. The return row is refunded, but is marked for investigation.
     * 2 = NoRefund. No refund is made for the return row.
     * 3 = RegularRefund. The return row is refunded normally.
     * 4 = RefundToBalance. The return row is refunded to the customer's balance.  
     * 1 = Investigate. The return row is refunded, but is marked for investigation.  
     * 2 = NoRefund. No refund is made for the return row.  
     * 3 = RegularRefund. The return row is refunded normally.  
     * 4 = RefundToBalance. The return row is refunded to the customer's balance.
     * @type {number}
     * @memberof NewReturnRow
     */
    returnAction?: NewReturnRowReturnActionEnum;
    /**
     * The refund amount for this return row. The refund amount must be less than or equal to the order row value.
     * Required.
     * @type {number}
     * @memberof NewReturnRow
     */
    refundAmount?: number;
    /**
     * Set to true if the product corresponding to this return row should be automatically restocked when the return is created.
     * @type {boolean}
     * @memberof NewReturnRow
     */
    restock?: boolean;
}


/**
 * @export
 */
export const NewReturnRowReturnActionEnum = {
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4
} as const;
export type NewReturnRowReturnActionEnum = typeof NewReturnRowReturnActionEnum[keyof typeof NewReturnRowReturnActionEnum];


/**
 * Check if a given object implements the NewReturnRow interface.
 */
export function instanceOfNewReturnRow(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NewReturnRowFromJSON(json: any): NewReturnRow {
    return NewReturnRowFromJSONTyped(json, false);
}

export function NewReturnRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewReturnRow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'orderRowId': !exists(json, 'OrderRowId') ? undefined : json['OrderRowId'],
        'returnCode': !exists(json, 'ReturnCode') ? undefined : json['ReturnCode'],
        'returnAction': !exists(json, 'ReturnAction') ? undefined : json['ReturnAction'],
        'refundAmount': !exists(json, 'RefundAmount') ? undefined : json['RefundAmount'],
        'restock': !exists(json, 'Restock') ? undefined : json['Restock'],
    };
}

export function NewReturnRowToJSON(value?: NewReturnRow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'OrderRowId': value.orderRowId,
        'ReturnCode': value.returnCode,
        'ReturnAction': value.returnAction,
        'RefundAmount': value.refundAmount,
        'Restock': value.restock,
    };
}

