/* tslint:disable */
/* eslint-disable */
/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A refund.
 * @export
 * @interface OrderModelsOrderRefund
 */
export interface OrderModelsOrderRefund {
    /**
     * The id of this refund.
     * @type {number}
     * @memberof OrderModelsOrderRefund
     */
    id?: number;
    /**
     * Reference to the order row that has been refunded.
     * @type {number}
     * @memberof OrderModelsOrderRefund
     */
    orderRowId?: number;
    /**
     * Reference to the payment detail that has been refunded.
     * @type {number}
     * @memberof OrderModelsOrderRefund
     */
    paymentDetailId?: number;
    /**
     * Id number of the return. Can be used to group refunds.
     * @type {number}
     * @memberof OrderModelsOrderRefund
     */
    returnId?: number;
    /**
     * Article number. If the refund is not bound to an order row this field contains an optional refund article number.
     * @type {string}
     * @memberof OrderModelsOrderRefund
     */
    articleNumber?: string;
    /**
     * Datetime when the refund was created.
     * @type {Date}
     * @memberof OrderModelsOrderRefund
     */
    createdAt?: Date;
    /**
     * Total amount refunded.
     * @type {number}
     * @memberof OrderModelsOrderRefund
     */
    total?: number;
    /**
     * Reason code for the refund.
     * @type {number}
     * @memberof OrderModelsOrderRefund
     */
    reasonCode?: number;
    /**
     * Reason for refund.
     * @type {string}
     * @memberof OrderModelsOrderRefund
     */
    reason?: string;
    /**
     * Shows if the refund was deposited to the customers balance.
     * @type {boolean}
     * @memberof OrderModelsOrderRefund
     */
    toBalance?: boolean;
    /**
     * Vat percent in decimals for the refunded amount.
     * @type {number}
     * @memberof OrderModelsOrderRefund
     */
    vat?: number;
    /**
     * Item id (SKU).
     * @type {number}
     * @memberof OrderModelsOrderRefund
     */
    itemId?: number;
    /**
     * Refund type.
     * @type {string}
     * @memberof OrderModelsOrderRefund
     */
    refundType?: string;
}

/**
 * Check if a given object implements the OrderModelsOrderRefund interface.
 */
export function instanceOfOrderModelsOrderRefund(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderModelsOrderRefundFromJSON(json: any): OrderModelsOrderRefund {
    return OrderModelsOrderRefundFromJSONTyped(json, false);
}

export function OrderModelsOrderRefundFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderModelsOrderRefund {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'orderRowId': !exists(json, 'OrderRowId') ? undefined : json['OrderRowId'],
        'paymentDetailId': !exists(json, 'PaymentDetailId') ? undefined : json['PaymentDetailId'],
        'returnId': !exists(json, 'ReturnId') ? undefined : json['ReturnId'],
        'articleNumber': !exists(json, 'ArticleNumber') ? undefined : json['ArticleNumber'],
        'createdAt': !exists(json, 'CreatedAt') ? undefined : (new Date(json['CreatedAt'])),
        'total': !exists(json, 'Total') ? undefined : json['Total'],
        'reasonCode': !exists(json, 'ReasonCode') ? undefined : json['ReasonCode'],
        'reason': !exists(json, 'Reason') ? undefined : json['Reason'],
        'toBalance': !exists(json, 'ToBalance') ? undefined : json['ToBalance'],
        'vat': !exists(json, 'Vat') ? undefined : json['Vat'],
        'itemId': !exists(json, 'ItemId') ? undefined : json['ItemId'],
        'refundType': !exists(json, 'RefundType') ? undefined : json['RefundType'],
    };
}

export function OrderModelsOrderRefundToJSON(value?: OrderModelsOrderRefund | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'OrderRowId': value.orderRowId,
        'PaymentDetailId': value.paymentDetailId,
        'ReturnId': value.returnId,
        'ArticleNumber': value.articleNumber,
        'CreatedAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'Total': value.total,
        'ReasonCode': value.reasonCode,
        'Reason': value.reason,
        'ToBalance': value.toBalance,
        'Vat': value.vat,
        'ItemId': value.itemId,
        'RefundType': value.refundType,
    };
}

