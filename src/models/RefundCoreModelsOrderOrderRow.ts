/* tslint:disable */
/* eslint-disable */
/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * An order row.
 * @export
 * @interface RefundCoreModelsOrderOrderRow
 */
export interface RefundCoreModelsOrderOrderRow {
    /**
     * The id of the order row.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    orderRowId?: number;
    /**
     * The SKU.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    itemId?: number;
    /**
     * The product id.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    productId?: number;
    /**
     * The price of the order row, inc vat.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    price?: number;
    /**
     * The price of the order row, ex vat.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    priceExVat?: number;
    /**
     * The name of the order row.
     * @type {string}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    name?: string;
    /**
     * The name of the product.
     * @type {string}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    productName?: string;
    /**
     * The name of the variant.
     * @type {string}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    variant?: string;
    /**
     * The name of the product brand.
     * @type {string}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    brand?: string;
    /**
     * The primary image of the product.
     * @type {string}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    primaryImage?: string;
    /**
     * The article number.
     * @type {string}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    articleNumber?: string;
    /**
     * The shelf of the SKU.
     * @type {string}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    shelf?: string;
    /**
     * The name of the campaigns applied to this order row.
     * @type {string}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    campaignNames?: string;
    /**
     * The discount amount applied to this order row.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    discount?: number;
    /**
     * A suggested refund amount if this order row were to be returned. This takes into account discounts applied to the entire order.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    suggestedRefundAmount?: number;
    /**
     * The average discount applied to this order row. This takes into account discounts applied to the entire order.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    averageDiscount?: number;
    /**
     * The price of the order row before any discounts were applied.
     * @type {number}
     * @memberof RefundCoreModelsOrderOrderRow
     */
    priceBeforeDiscount?: number;
}

/**
 * Check if a given object implements the RefundCoreModelsOrderOrderRow interface.
 */
export function instanceOfRefundCoreModelsOrderOrderRow(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RefundCoreModelsOrderOrderRowFromJSON(json: any): RefundCoreModelsOrderOrderRow {
    return RefundCoreModelsOrderOrderRowFromJSONTyped(json, false);
}

export function RefundCoreModelsOrderOrderRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundCoreModelsOrderOrderRow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'orderRowId': !exists(json, 'OrderRowId') ? undefined : json['OrderRowId'],
        'itemId': !exists(json, 'ItemId') ? undefined : json['ItemId'],
        'productId': !exists(json, 'ProductId') ? undefined : json['ProductId'],
        'price': !exists(json, 'Price') ? undefined : json['Price'],
        'priceExVat': !exists(json, 'PriceExVat') ? undefined : json['PriceExVat'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'productName': !exists(json, 'ProductName') ? undefined : json['ProductName'],
        'variant': !exists(json, 'Variant') ? undefined : json['Variant'],
        'brand': !exists(json, 'Brand') ? undefined : json['Brand'],
        'primaryImage': !exists(json, 'PrimaryImage') ? undefined : json['PrimaryImage'],
        'articleNumber': !exists(json, 'ArticleNumber') ? undefined : json['ArticleNumber'],
        'shelf': !exists(json, 'Shelf') ? undefined : json['Shelf'],
        'campaignNames': !exists(json, 'CampaignNames') ? undefined : json['CampaignNames'],
        'discount': !exists(json, 'Discount') ? undefined : json['Discount'],
        'suggestedRefundAmount': !exists(json, 'SuggestedRefundAmount') ? undefined : json['SuggestedRefundAmount'],
        'averageDiscount': !exists(json, 'AverageDiscount') ? undefined : json['AverageDiscount'],
        'priceBeforeDiscount': !exists(json, 'PriceBeforeDiscount') ? undefined : json['PriceBeforeDiscount'],
    };
}

export function RefundCoreModelsOrderOrderRowToJSON(value?: RefundCoreModelsOrderOrderRow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'OrderRowId': value.orderRowId,
        'ItemId': value.itemId,
        'ProductId': value.productId,
        'Price': value.price,
        'PriceExVat': value.priceExVat,
        'Name': value.name,
        'ProductName': value.productName,
        'Variant': value.variant,
        'Brand': value.brand,
        'PrimaryImage': value.primaryImage,
        'ArticleNumber': value.articleNumber,
        'Shelf': value.shelf,
        'CampaignNames': value.campaignNames,
        'Discount': value.discount,
        'SuggestedRefundAmount': value.suggestedRefundAmount,
        'AverageDiscount': value.averageDiscount,
        'PriceBeforeDiscount': value.priceBeforeDiscount,
    };
}

